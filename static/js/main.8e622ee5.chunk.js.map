{"version":3,"sources":["store/action-types/action-types.js","store/reducers/products.js","store/reducers/rootReducers.js","store/store.js","components/Home/Product.jsx","components/Home/Home.jsx","config.js","helpers/http-client.js","store/actions/products.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","initialState","rootReducer","combineReducers","products","state","action","type","payload","product","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","thunk","Product","item","productDetailsHandler","onClick","className","alt","Title","src","Poster","Home","props","getProduct","imdbID","handleDescModal","setState","descModal","filterItems","filter","lowerCaseName","toLowerCase","lowerCaseSearchString","searchString","includes","handleSearchBarModal","searchBarModal","inputRef","current","focus","React","createRef","productDetail","this","getProducts","to","ref","placeholder","value","onChange","e","target","map","index","key","length","Modal","show","onHide","Header","Body","Year","imdbRating","parseFloat","Plot","Footer","Button","variant","Component","config","API_URL","process","httpInstance","axios","create","baseURL","onGetProducts","data","onGetProduct","connect","path","loading","dispatch","page","Promise","res","rej","method","url","then","response","catch","error","console","log","id","App","store","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8e622ee5.chunk.js","sourcesContent":["export const actionTypes = {\r\n  GET_PRODUCTS: \"GET_PRODUCTS\",\r\n  GET_PRODUCT: \"GET_PRODUCT\",\r\n};\r\n","import { actionTypes } from \"../action-types/action-types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function index(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        products: {\r\n          ...state.products,\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n\r\n    case actionTypes.GET_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        product: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport products from \"./products\";\r\n\r\nconst rootReducer = combineReducers({\r\n  products,\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const appStore = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\n\r\nfunction Product({ item, productDetailsHandler }) {\r\n  return (\r\n    <li>\r\n      <div onClick={() => productDetailsHandler(item)} className=\"item-card\">\r\n        <img alt={item.Title} src={item.Poster} />\r\n        <span>{item.Title}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n\r\n    this.state = {\r\n      searchString: \"\",\r\n      descModal: false,\r\n      productDetail: null,\r\n    };\r\n  }\r\n\r\n  productDetailsHandler = (item) => {\r\n    this.props.getProduct(item.imdbID);\r\n    this.handleDescModal();\r\n  };\r\n\r\n  handleDescModal = () => {\r\n    this.setState({\r\n      descModal: !this.state.descModal,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProducts();\r\n  }\r\n\r\n  filterItems = () => {\r\n    return (\r\n      this.props.products &&\r\n      this.props.products.filter((item) => {\r\n        const lowerCaseName = item.Title.toLowerCase();\r\n        const lowerCaseSearchString = this.state.searchString.toLowerCase();\r\n        return lowerCaseName.includes(lowerCaseSearchString);\r\n      })\r\n    );\r\n  };\r\n\r\n  handleSearchBarModal = () => {\r\n    this.setState(\r\n      {\r\n        searchBarModal: true,\r\n      },\r\n      () => {\r\n        this.inputRef.current.focus();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-content main-content\">\r\n        <div className=\"top-sec\">\r\n          <div className=\"container\">\r\n            {!this.state.searchBarModal && (\r\n              <div className=\"info\">\r\n                <span to=\"\">Movies List</span>\r\n                <FiSearch\r\n                  onClick={this.handleSearchBarModal}\r\n                  className=\"icon search\"\r\n                />\r\n              </div>\r\n            )}\r\n            {this.state.searchBarModal && (\r\n              <div className=\"search-bar\">\r\n                <BsArrowLeftShort\r\n                  onClick={() => this.setState({ searchBarModal: false })}\r\n                  className=\"icon left-arrow-icon\"\r\n                />\r\n                <input\r\n                  ref={this.inputRef}\r\n                  placeholder=\"Search\"\r\n                  className=\"search-input\"\r\n                  value={this.state.searchString}\r\n                  onChange={(e) => {\r\n                    this.setState({ searchString: e.target.value });\r\n                  }}\r\n                />\r\n                <MdClose\r\n                  onClick={() => this.setState({ searchString: \"\" })}\r\n                  className=\"icon close\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"container container-products\">\r\n          <ul className=\"products\">\r\n            {this.filterItems() &&\r\n              this.filterItems().map((item, index) => {\r\n                return (\r\n                  <Product\r\n                    key={item.imdbID}\r\n                    item={item}\r\n                    productDetailsHandler={this.productDetailsHandler}\r\n                  />\r\n                );\r\n              })}\r\n          </ul>\r\n          {this.filterItems() && this.filterItems().length === 0 && (\r\n            <div className=\"no-records\">No Records </div>\r\n          )}\r\n        </div>\r\n        <Modal show={this.state.descModal} onHide={this.handleDescModal}>\r\n          <Modal.Header>\r\n            <Modal.Title>Description</Modal.Title>\r\n          </Modal.Header>\r\n          {this.props.product && (\r\n            <Modal.Body>\r\n              <span>{this.props.product.Title}</span>\r\n              <span>Year: {this.props.product.Year}</span>\r\n              {this.props.product.imdbRating &&\r\n                this.props.product.imdbRating !== \"N/A\" && (\r\n                  <strong>\r\n                    boxoffice:{\" \"}\r\n                    {parseFloat(this.props.product.imdbRating) > 7 && \"hit\"}\r\n                    {parseFloat(this.props.product.imdbRating) <= 7 && \"flop\"}\r\n                  </strong>\r\n                )}\r\n\r\n              <p>{this.props.product.Plot}</p>\r\n            </Modal.Body>\r\n          )}\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleDescModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","//\r\nconst config = {\r\n  API_URL: process.env.REACT_APP_API_HOST,\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\nconst httpInstance = axios.create({\r\n  baseURL: config.API_URL,\r\n});\r\n\r\nexport default httpInstance;\r\n","import httpInstance from \"../../helpers/http-client\";\r\nimport { actionTypes } from \"../action-types/action-types\";\r\n\r\nexport const onGetProducts = (data) => {\r\n  return {\r\n    type: actionTypes.GET_PRODUCTS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n/* action returns a promise: We can use .then callback while calling this action.*/\r\n\r\nexport const getProducts = (page) => (dispatch) => {\r\n  return new Promise((res, rej) => {\r\n    dispatch(onGetProducts({ loading: true }));\r\n    httpInstance({\r\n      method: \"get\",\r\n      url: \"/?s=x men&y=2000&apikey=f82e2f54\",\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetProducts({ ...response.data, loading: false }));\r\n\r\n        res(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        rej();\r\n      });\r\n  });\r\n};\r\n\r\nexport const onGetProduct = (payload) => {\r\n  return {\r\n    type: actionTypes.GET_PRODUCT,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getProduct = (id) => (dispatch) => {\r\n  return new Promise((res, rej) => {\r\n    dispatch(onGetProduct({ loading: true }));\r\n    httpInstance({\r\n      method: \"get\",\r\n      url: `/?i=${id}&plot=full&apikey=f82e2f54`,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetProduct({ ...response.data, loading: false }));\r\n        res(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        rej();\r\n      });\r\n  });\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { path } from \"ramda\";\r\n\r\nimport Home from \"../components/Home/Home\";\r\n\r\nimport { getProducts, getProduct } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: path([\"products\", \"products\", \"Search\"], state),\r\n    loading: path([\"products\", \"products\", \"loading\"], state),\r\n    product: path([\"products\", \"product\"], state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getProducts: (page) => dispatch(getProducts(page)),\r\n    getProduct: (id) => dispatch(getProduct(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/global.css\"; // reset css //\nimport \"./css/app.css\";\n\nimport { Provider } from \"react-redux\";\nimport { appStore } from \"./store/store\";\n\nimport Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <Provider store={appStore}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/react-workshop-indegene\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}