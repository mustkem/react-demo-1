{"version":3,"sources":["store/action-types/action-types.js","store/reducers/products.js","store/reducers/rootReducers.js","store/store.js","components/Home/MoviesWithInfo/Movie.jsx","Shared/Pagination.jsx","components/Home/MoviesWithInfo/MoviesWithInfo.jsx","components/Home/MoviesWithPoster/MoviesWithPoster.jsx","components/Home/Home.jsx","config.js","helpers/http-client.js","store/actions/products.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","initialState","rootReducer","combineReducers","movies","state","action","type","payload","movie","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","thunk","Movie","item","movieDetailsHandler","isPosterVisible","className","alt","Title","src","Poster","Type","onClick","Year","Pagination","props","totalButtons","useState","activeIndex","setActiveIndex","location","useLocation","history","useHistory","useEffect","parse","search","page","buttonArray","totalResults","parseInt","i","push","map","query","pathname","stringify","getMovies","scrollTo","handleClick","MoviesWithInfo","descModal","setDescModal","getMovie","imdbID","key","Modal","show","onHide","Header","Body","imdbRating","parseFloat","Plot","Footer","Button","variant","MoviesWithPoster","Home","path","useRouteMatch","to","config","API_URL","process","apikey","httpInstance","axios","create","baseURL","onGetMovies","data","onGetMovie","connect","loading","dispatch","Promise","res","rej","method","url","then","response","catch","error","console","log","id","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aaafa038.chunk.js","sourcesContent":["export const actionTypes = {\r\n  GET_MOVIES: \"GET_MOVIES\",\r\n  GET_MOVIE: \"GET_MOVIE\",\r\n};\r\n","import { actionTypes } from \"../action-types/action-types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function index(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_MOVIES: {\r\n      return {\r\n        ...state,\r\n        movies: {\r\n          ...state.movies,\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n\r\n    case actionTypes.GET_MOVIE: {\r\n      return {\r\n        ...state,\r\n        movie: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport movies from \"./products\";\r\n\r\nconst rootReducer = combineReducers({\r\n  movies,\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const appStore = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\n\r\nfunction Movie({ item, movieDetailsHandler, isPosterVisible }) {\r\n  return (\r\n    <li>\r\n      <div className=\"item-card\">\r\n        {isPosterVisible && <img alt={item.Title} src={item.Poster} />}\r\n        <span>Title: {item.Title}</span>\r\n        {!isPosterVisible && (\r\n          <>\r\n            <span>Type: {item.Type}</span>\r\n            <button onClick={() => movieDetailsHandler(item)}>\r\n              View Details\r\n            </button>\r\n          </>\r\n        )}\r\n        <span>Year: {item.Year}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { parse, stringify } from \"query-string\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Pagination(props) {\r\n  /* For proptypes please refer bottom of component*/\r\n  const [activeIndex, setActiveIndex] = useState(1);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (parse(location.search).page) {\r\n      setActiveIndex(parse(location.search).page);\r\n    }\r\n  }, []);\r\n\r\n  function handleClick(page) {\r\n    const query = parse(location.search);\r\n    query.page = page;\r\n    history.push(history.location.pathname + \"?\" + stringify(query));\r\n    props.getMovies(page);\r\n    window.scrollTo(0, 0);\r\n    setActiveIndex(page);\r\n  }\r\n\r\n  let totalButtons;\r\n  let buttonArray = [];\r\n\r\n  const totalResults = parseInt(props.totalResults);\r\n  if (totalResults % 10 === 0) {\r\n    totalButtons = totalResults / 10;\r\n  } else {\r\n    totalButtons = totalResults / 10 + 1;\r\n  }\r\n\r\n  for (let i = 1; i <= totalButtons; i++) {\r\n    buttonArray.push(i);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {buttonArray.map((item) => {\r\n        return (\r\n          <li className={item === parseInt(activeIndex) ? \"active\" : \"\"}>\r\n            <button onClick={() => handleClick(item)}>{item}</button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n\r\nPagination.propTypes = {\r\n  totalResults: PropTypes.string.isRequired,\r\n  getMovies: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { parse } from \"query-string\";\r\n\r\nimport Pagination from \"../../../Shared/Pagination\";\r\n\r\nfunction MoviesWithInfo(props) {\r\n  const [descModal, setDescModal] = useState();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    props.getMovies(parse(location.search).page);\r\n  }, []);\r\n\r\n  function movieDetailsHandler(item) {\r\n    props.getMovie(item.imdbID);\r\n    setDescModal(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"products\">\r\n        {props.movies &&\r\n          props.movies.map((item) => {\r\n            return (\r\n              <Movie\r\n                key={item.imdbID}\r\n                item={item}\r\n                movieDetailsHandler={movieDetailsHandler}\r\n              />\r\n            );\r\n          })}\r\n      </ul>\r\n      {props.totalResults && (\r\n        <Pagination\r\n          getMovies={props.getMovies}\r\n          totalResults={props.totalResults}\r\n        />\r\n      )}\r\n\r\n      <Modal show={descModal} onHide={() => setDescModal(!descModal)}>\r\n        <Modal.Header>\r\n          <Modal.Title>Description</Modal.Title>\r\n        </Modal.Header>\r\n        {props.movie && (\r\n          <Modal.Body>\r\n            <span>{props.movie.Title}</span>\r\n            <span>{props.movie.Year}</span>\r\n            {props.movie.imdbRating && props.movie.imdbRating !== \"N/A\" && (\r\n              <strong>\r\n                boxoffice: {parseFloat(props.movie.imdbRating) > 7 && \"hit\"}\r\n                {parseFloat(props.movie.imdbRating) <= 7 && \"flop\"}\r\n              </strong>\r\n            )}\r\n\r\n            <p>{props.movie.Plot}</p>\r\n          </Modal.Body>\r\n        )}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setDescModal(!descModal)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesWithInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { parse } from \"query-string\";\r\nimport Movie from \"../MoviesWithInfo/Movie\";\r\nimport Pagination from \"../../../Shared/Pagination\";\r\n\r\nfunction MoviesWithPoster(props) {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    props.getMovies(parse(location.search).page);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"products\">\r\n        {props.movies &&\r\n          props.movies.map((item) => {\r\n            return (\r\n              <Movie key={item.imdbID} item={item} isPosterVisible={true} />\r\n            );\r\n          })}\r\n      </ul>\r\n      {props.totalResults && (\r\n        <Pagination\r\n          getMovies={props.getMovies}\r\n          totalResults={props.totalResults}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesWithPoster;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MoviesWithInfo from \"./MoviesWithInfo/MoviesWithInfo\";\r\nimport MoviesWithPoster from \"./MoviesWithPoster/MoviesWithPoster\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n  let { path } = useRouteMatch();\r\n\r\n  return (\r\n    <div className=\"home-content main-content\">\r\n      <div className=\"top-sec\">\r\n        <div className=\"container\">\r\n          <div className=\"info\">Movies List</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container container-products\">\r\n        <div className=\"content-sec\">\r\n          <ul className=\"tabs\">\r\n            <li>\r\n              <NavLink to={`${path}/movies-info`}>Movies with info</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to={`${path}/movies-poster`}>Topics</NavLink>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            <Route path={path + \"/movies-info\"}>\r\n              <MoviesWithInfo {...props} />\r\n            </Route>\r\n            <Route path={`${path}/movies-poster`}>\r\n              <MoviesWithPoster {...props} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","//\r\nconst config = {\r\n  API_URL: process.env.REACT_APP_API_HOST,\r\n  apikey: \"f82e2f54\",\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\nconst httpInstance = axios.create({\r\n  baseURL: config.API_URL,\r\n});\r\n\r\nexport default httpInstance;\r\n","import httpInstance from \"../../helpers/http-client\";\r\nimport { actionTypes } from \"../action-types/action-types\";\r\nimport config from \"../../config\";\r\n\r\nexport const onGetMovies = (data) => {\r\n  return {\r\n    type: actionTypes.GET_MOVIES,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n/* action returns a promise: We can use .then callback while calling this action.*/\r\n\r\nexport const getMovies = (page) => (dispatch) => {\r\n  if (!page) page = 1;\r\n  return new Promise((res, rej) => {\r\n    dispatch(onGetMovies({ loading: true }));\r\n    httpInstance({\r\n      method: \"get\",\r\n      url: `/?s=man&y=2000&apikey=${config.apikey}&page=${page}`,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetMovies({ ...response.data, loading: false }));\r\n\r\n        res(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        rej();\r\n      });\r\n  });\r\n};\r\n\r\nexport const onGetMovie = (payload) => {\r\n  return {\r\n    type: actionTypes.GET_MOVIE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getMovie = (id) => (dispatch) => {\r\n  return new Promise((res, rej) => {\r\n    dispatch(onGetMovie({ loading: true }));\r\n    httpInstance({\r\n      method: \"get\",\r\n      url: `/?i=${id}&plot=full&apikey=f82e2f54`,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(onGetMovie({ ...response.data, loading: false }));\r\n        res(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        rej();\r\n      });\r\n  });\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { path } from \"ramda\";\r\n\r\nimport Home from \"../components/Home/Home\";\r\n\r\nimport { getMovies, getMovie } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: path([\"movies\", \"movies\", \"Search\"], state),\r\n    loading: path([\"movies\", \"movies\", \"loading\"], state),\r\n    movie: path([\"movies\", \"movie\"], state),\r\n    totalResults: path([\"movies\", \"movies\", \"totalResults\"], state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMovies: (page) => dispatch(getMovies(page)),\r\n    getMovie: (id) => dispatch(getMovie(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/global.css\"; // reset css //\r\nimport \"./css/app.css\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { appStore } from \"./store/store\";\r\n\r\nimport Home from \"./containers/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={appStore}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/react-workshop-indegene\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}